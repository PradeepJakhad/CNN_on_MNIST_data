# -*- coding: utf-8 -*-
"""CNN on MNIST data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b3ITqOUXlIf0wTVdUd3KqRB0XMBuEbzy
"""

import numpy as np
import keras
from keras.datasets import mnist
from keras.models import Model
from keras.layers import Dense, Input
from keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten
from keras import backend as k
from keras.optimizers import Adam
from keras.models import Sequential
from keras.utils import plot_model

(x_train, y_train), (x_test, y_test) = mnist.load_data()

img_rows, img_cols=28, 28

if k.image_data_format() == 'channels_first':
   x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)
   x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)
   inpx = (1, img_rows, img_cols)

else:
   x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)
   x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)
   inpx = (img_rows, img_cols, 1)

x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255

y_train = keras.utils.to_categorical(y_train)
y_test = keras.utils.to_categorical(y_test)
print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

model=Sequential()
model.add(Conv2D(32,(3,3),activation='relu',input_shape=(28, 28, 1)))
model.add(MaxPooling2D((2,2)))
model.add(Conv2D(64,(3,3),activation='relu'))
model.add(MaxPooling2D((2,2)))
model.add(Flatten())
model.add(Dense(250,activation='relu'))
model.add(Dense(10,activation='softmax'))

plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)

model.compile(optimizer=('adam'),
              loss=keras.losses.categorical_crossentropy,
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=20, batch_size=128)

loss,accuracy = model.evaluate(x_test, y_test, verbose=0)
print('loss=', loss)
print('accuracy=', accuracy)